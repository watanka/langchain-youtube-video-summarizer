version: "3"

services :
  proxy : 
    image : "proxy"
    build : 
      dockerfile : "./Dockerfile.proxy"

    restart : unless-stopped    
    ports :
      - "8080:${PROXY_PORT}"
    depends_on :
      - transcriber
      - summarizer

    volumes : 
      # - type : bind
      #   source : ./proxy
      #   target : /proxy
      # - type : bind 
    #     source : ./run.sh
    #     target : /proxy/run.sh
      # - type : bind 
      #   source : ./logging.conf
      #   target : /src/logging.conf
      - audios:/proxy/${AUDIO_PATH}

    
    environment :
      - APP_NAME=src.proxy.app:app #${APP_NAME}
      - PORT=${PROXY_PORT}
      - TRANSCRIBER_SERVICE=${TRANSCRIBER_SERVICE}
      - SUMMARIZER_SERVICE=${SUMMARIZER_SERVICE}

    networks : 
      - my_network
    command : ["sh", "./run.sh"]

  transcriber :
    image : "transcriber"
    build : 
      dockerfile : "./Dockerfile.transcriber"

    environment :
      - APP_NAME=${APP_NAME}
      - PORT=${TRANSCRIBER_PORT}
    
    ports :
      - "5000:5000"
    volumes : 
      - type : bind
        source : ./transcriber
        target : /transcriber
      - type : bind 
        source : ./run.sh
        target : /transcriber/run.sh
      - type : bind 
        source : ./logging.conf
        target : /transcriber/logging.conf
      - type : bind
        source : ./log_db
        target : /transcriber/log_db
      - transcription:/transcriber/${TRANSCRIPTION_PATH}
      - audios:/transcriber/${AUDIO_PATH}


    restart : unless-stopped
    networks : 
      - my_network
    command : ["sh", "./run.sh"]
  
  summarizer : 
    image : "summarizer"
    build : 
      dockerfile : "./Dockerfile.summarizer"
    environment :
      - APP_NAME=${APP_NAME}
      - PORT=${SUMMARIZER_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

    volumes : 
      - type : bind
        source : ./summarizer
        target : /summarizer
      - type : bind 
        source : ./logging.conf
        target : /summarizer/logging.conf
      - type : bind 
        source : ./run.sh
        target : /summarizer/run.sh
      - type : bind
        source : ./log_db
        target : /summarizer/log_db
      - transcription:/summarizer/${TRANSCRIPTION_PATH}

    restart : unless-stopped
    networks : 
      - my_network
    command : ["sh", "./run.sh"]
  
  backend :
    image : 'backend'
    build :
      dockerfile : './Dockerfile.backend'
    entrypoint: ["python", "-m", "src.backend.monitor"]
    depends_on :
      - redis
    volumes :
      - transcription:/backend-server/${TRANSCRIPTION_PATH}
    networks :
      - my_network
    

  redis:
    image : 'redis'
    expose :
      - 6379
    networks :
      - my_network

  logging-db : 
    image : 'mysql'
    expose : 
      - ${DB_PORT}
    environment:
      MYSQL_USER: ${DB_USER}  # 데이터베이스 사용자 이름
      MYSQL_PASSWORD: ${DB_PASSWORD}  # 데이터베이스 사용자의 비밀번호
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}  # 초기에 생성할 데이터베이스 이름
    networks : 
      - my_network
    

networks :
  my_network : 

volumes :
  audios : 
  transcription :